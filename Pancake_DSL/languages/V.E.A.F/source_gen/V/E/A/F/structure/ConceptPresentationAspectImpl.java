package V.E.A.F.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private ConceptPresentation props_Action;
  private ConceptPresentation props_Component;
  private ConceptPresentation props_ComponentCondition;
  private ConceptPresentation props_Condition;
  private ConceptPresentation props_Event;
  private ConceptPresentation props_MultipleCondition;
  private ConceptPresentation props_State;
  private ConceptPresentation props_VEAF;
  private ConceptPresentation props_Variable;
  private ConceptPresentation props_VariableBoolean;
  private ConceptPresentation props_VariableBooleanCondition;
  private ConceptPresentation props_VariableCondition;
  private ConceptPresentation props_VariableInteger;
  private ConceptPresentation props_VariableIntegerCondition;
  private ConceptPresentation props_VariableString;
  private ConceptPresentation props_VariableStringCondition;

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.Action:
        if (props_Action == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("action");
          props_Action = cpb.create();
        }
        return props_Action;
      case LanguageConceptSwitch.Component:
        if (props_Component == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_Component = cpb.create();
        }
        return props_Component;
      case LanguageConceptSwitch.ComponentCondition:
        if (props_ComponentCondition == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByReference(0xf152af7d92d2462fL, 0xacb4a6902db66b9dL, 0x31e1baf5f2d07866L, 0x31e1baf5f2d07c32L, "component", "", "");
          props_ComponentCondition = cpb.create();
        }
        return props_ComponentCondition;
      case LanguageConceptSwitch.Condition:
        if (props_Condition == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_Condition = cpb.create();
        }
        return props_Condition;
      case LanguageConceptSwitch.Event:
        if (props_Event == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("event");
          props_Event = cpb.create();
        }
        return props_Event;
      case LanguageConceptSwitch.MultipleCondition:
        if (props_MultipleCondition == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("MultipleCondition");
          props_MultipleCondition = cpb.create();
        }
        return props_MultipleCondition;
      case LanguageConceptSwitch.State:
        if (props_State == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_State = cpb.create();
        }
        return props_State;
      case LanguageConceptSwitch.VEAF:
        if (props_VEAF == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_VEAF = cpb.create();
        }
        return props_VEAF;
      case LanguageConceptSwitch.Variable:
        if (props_Variable == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_Variable = cpb.create();
        }
        return props_Variable;
      case LanguageConceptSwitch.VariableBoolean:
        if (props_VariableBoolean == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_VariableBoolean = cpb.create();
        }
        return props_VariableBoolean;
      case LanguageConceptSwitch.VariableBooleanCondition:
        if (props_VariableBooleanCondition == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByReference(0xf152af7d92d2462fL, 0xacb4a6902db66b9dL, 0x5053c2963ccb5644L, 0x5053c2963ccb7abeL, "variable", "", "");
          props_VariableBooleanCondition = cpb.create();
        }
        return props_VariableBooleanCondition;
      case LanguageConceptSwitch.VariableCondition:
        if (props_VariableCondition == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_VariableCondition = cpb.create();
        }
        return props_VariableCondition;
      case LanguageConceptSwitch.VariableInteger:
        if (props_VariableInteger == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_VariableInteger = cpb.create();
        }
        return props_VariableInteger;
      case LanguageConceptSwitch.VariableIntegerCondition:
        if (props_VariableIntegerCondition == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByReference(0xf152af7d92d2462fL, 0xacb4a6902db66b9dL, 0x5053c2963ccb4d96L, 0x5053c2963ccb7f52L, "variable", "", "");
          props_VariableIntegerCondition = cpb.create();
        }
        return props_VariableIntegerCondition;
      case LanguageConceptSwitch.VariableString:
        if (props_VariableString == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_VariableString = cpb.create();
        }
        return props_VariableString;
      case LanguageConceptSwitch.VariableStringCondition:
        if (props_VariableStringCondition == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByReference(0xf152af7d92d2462fL, 0xacb4a6902db66b9dL, 0x5053c2963ccb60fbL, 0x5053c2963ccb86beL, "variable", "", "");
          props_VariableStringCondition = cpb.create();
        }
        return props_VariableStringCondition;
    }
    return null;
  }
}
