package V.E.A.F.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int Action = 0;
  public static final int Actuator = 1;
  public static final int ActuatorAction = 2;
  public static final int AssigneSensorAction = 3;
  public static final int AssigneValueAction = 4;
  public static final int AssigneVariableAction = 5;
  public static final int AssigneVariableBooleanAction = 6;
  public static final int AssigneVariableIntegerAction = 7;
  public static final int Component = 8;
  public static final int Condition = 9;
  public static final int MultipleCondition = 10;
  public static final int PauseAction = 11;
  public static final int Sensor = 12;
  public static final int SensorCondition = 13;
  public static final int State = 14;
  public static final int Transition = 15;
  public static final int UnaryCondition = 16;
  public static final int VEAF = 17;
  public static final int Variable = 18;
  public static final int VariableAction = 19;
  public static final int VariableBoolean = 20;
  public static final int VariableBooleanAction = 21;
  public static final int VariableBooleanCondition = 22;
  public static final int VariableCondition = 23;
  public static final int VariableInteger = 24;
  public static final int VariableIntegerAction = 25;
  public static final int VariableIntegerCondition = 26;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0xf152af7d92d2462fL, 0xacb4a6902db66b9dL);
    builder.put(0x1900d2d6a86e7681L, Action);
    builder.put(0x7ae59a00bc622074L, Actuator);
    builder.put(0x7ae59a00bc6213a1L, ActuatorAction);
    builder.put(0x3b94e0f4536293abL, AssigneSensorAction);
    builder.put(0x3b94e0f453490969L, AssigneValueAction);
    builder.put(0x3b94e0f45348a32eL, AssigneVariableAction);
    builder.put(0x3b94e0f45348bfa7L, AssigneVariableBooleanAction);
    builder.put(0x3b94e0f45348aeabL, AssigneVariableIntegerAction);
    builder.put(0x27d147c85ff6c4d2L, Component);
    builder.put(0x31e1baf5f2d05c92L, Condition);
    builder.put(0x31e1baf5f2d09e26L, MultipleCondition);
    builder.put(0x3b94e0f4535a08a8L, PauseAction);
    builder.put(0x7ae59a00bc6224d3L, Sensor);
    builder.put(0x31e1baf5f2d07866L, SensorCondition);
    builder.put(0x27d147c85ff6ccd9L, State);
    builder.put(0x5afc605aa5c83e8fL, Transition);
    builder.put(0x7ae59a00bc625a07L, UnaryCondition);
    builder.put(0x27d147c85ff679c8L, VEAF);
    builder.put(0x5afc605aa5c82241L, Variable);
    builder.put(0x7ae59a00bc621590L, VariableAction);
    builder.put(0x5053c2963cc9b643L, VariableBoolean);
    builder.put(0x7ae59a00bc6230bcL, VariableBooleanAction);
    builder.put(0x5053c2963ccb5644L, VariableBooleanCondition);
    builder.put(0x31e1baf5f2d06470L, VariableCondition);
    builder.put(0x5053c2963cc9c00fL, VariableInteger);
    builder.put(0x7ae59a00bc623b51L, VariableIntegerAction);
    builder.put(0x5053c2963ccb4d96L, VariableIntegerCondition);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
