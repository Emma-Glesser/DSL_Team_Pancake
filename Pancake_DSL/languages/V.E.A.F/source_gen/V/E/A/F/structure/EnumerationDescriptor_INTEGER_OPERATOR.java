package V.E.A.F.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.EnumerationDescriptorBase;
import jetbrains.mps.smodel.runtime.EnumerationDescriptor;
import jetbrains.mps.lang.smodel.EnumerationLiteralsIndex;
import java.util.List;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;

public class EnumerationDescriptor_INTEGER_OPERATOR extends EnumerationDescriptorBase {

  public EnumerationDescriptor_INTEGER_OPERATOR() {
    super(0xf152af7d92d2462fL, 0xacb4a6902db66b9dL, 0x7ae59a00bc6250cfL, "INTEGER_OPERATOR", "r:79efd526-4965-4b82-846b-97823ace55e0(V.E.A.F.structure)/8855653570245185743");
  }

  private final EnumerationDescriptor.MemberDescriptor myMember_EQUALS_0 = new EnumerationDescriptor.MemberDescriptor("EQUALS", "EQUALS", 0x7ae59a00bc6250d0L, "r:79efd526-4965-4b82-846b-97823ace55e0(V.E.A.F.structure)/8855653570245185744");
  private final EnumerationDescriptor.MemberDescriptor myMember_NOT_EQUALS_0 = new EnumerationDescriptor.MemberDescriptor("NOT_EQUALS", "NOT_EQUALS", 0x7ae59a00bc6250d1L, "r:79efd526-4965-4b82-846b-97823ace55e0(V.E.A.F.structure)/8855653570245185745");
  private final EnumerationDescriptor.MemberDescriptor myMember_LESS_0 = new EnumerationDescriptor.MemberDescriptor("LESS", "LESS", 0x7ae59a00bc6250d4L, "r:79efd526-4965-4b82-846b-97823ace55e0(V.E.A.F.structure)/8855653570245185748");
  private final EnumerationDescriptor.MemberDescriptor myMember_GREATER_0 = new EnumerationDescriptor.MemberDescriptor("GREATER", "GREATER", 0x7ae59a00bc6250d8L, "r:79efd526-4965-4b82-846b-97823ace55e0(V.E.A.F.structure)/8855653570245185752");

  private final EnumerationLiteralsIndex myIndex = EnumerationLiteralsIndex.build(0xf152af7d92d2462fL, 0xacb4a6902db66b9dL, 0x7ae59a00bc6250cfL, 0x7ae59a00bc6250d0L, 0x7ae59a00bc6250d1L, 0x7ae59a00bc6250d4L, 0x7ae59a00bc6250d8L);
  private final List<EnumerationDescriptor.MemberDescriptor> myMembers = new EnumerationDescriptorBase.MembersList(myIndex, myMember_EQUALS_0, myMember_NOT_EQUALS_0, myMember_LESS_0, myMember_GREATER_0);

  @Nullable
  @Override
  public EnumerationDescriptor.MemberDescriptor getDefault() {
    return null;
  }

  @NotNull
  @Override
  public List<EnumerationDescriptor.MemberDescriptor> getMembers() {
    return myMembers;
  }

  @Nullable
  @Override
  public EnumerationDescriptor.MemberDescriptor getMember(@Nullable String memberName) {
    if (memberName == null) {
      return null;
    }
    switch (memberName) {
      case "EQUALS":
        return myMember_EQUALS_0;
      case "NOT_EQUALS":
        return myMember_NOT_EQUALS_0;
      case "LESS":
        return myMember_LESS_0;
      case "GREATER":
        return myMember_GREATER_0;
    }
    return null;
  }

  @Nullable
  @Override
  public EnumerationDescriptor.MemberDescriptor getMember(long idValue) {
    int index = myIndex.index(idValue);
    if (index == -1) {
      return null;
    }
    return myMembers.get(index);
  }
}
