package V.E.A.F.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.EditorAspectDescriptorBase;
import org.jetbrains.annotations.NotNull;
import java.util.Collection;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import java.util.Collections;
import jetbrains.mps.openapi.editor.descriptor.SubstituteMenu;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public class EditorAspectDescriptorImpl extends EditorAspectDescriptorBase {
  @NotNull
  public Collection<ConceptEditor> getDeclaredEditors(SAbstractConcept concept) {
    SAbstractConcept cncpt = ((SAbstractConcept) concept);
    switch (conceptIndex.index(cncpt)) {
      case 0:
        return Collections.<ConceptEditor>singletonList(new Action_Editor());
      case 1:
        return Collections.<ConceptEditor>singletonList(new Component_Editor());
      case 2:
        return Collections.<ConceptEditor>singletonList(new ComponentCondition_Editor());
      case 3:
        return Collections.<ConceptEditor>singletonList(new Event_Editor());
      case 4:
        return Collections.<ConceptEditor>singletonList(new MultipleCondition_Editor());
      case 5:
        return Collections.<ConceptEditor>singletonList(new State_Editor());
      case 6:
        return Collections.<ConceptEditor>singletonList(new VEAF_Editor());
      case 7:
        return Collections.<ConceptEditor>singletonList(new VariableBoolean_Editor());
      case 8:
        return Collections.<ConceptEditor>singletonList(new VariableBooleanCondition_Editor());
      case 9:
        return Collections.<ConceptEditor>singletonList(new VariableInteger_Editor());
      case 10:
        return Collections.<ConceptEditor>singletonList(new VariableIntegerCondition_Editor());
      case 11:
        return Collections.<ConceptEditor>singletonList(new VariableString_Editor());
      case 12:
        return Collections.<ConceptEditor>singletonList(new VariableStringCondition_Editor());
      default:
    }
    return Collections.<ConceptEditor>emptyList();
  }


  @NotNull
  @Override
  public Collection<SubstituteMenu> getDeclaredDefaultSubstituteMenus(SAbstractConcept concept) {
    SAbstractConcept cncpt = concept;
    switch (conceptIndex1.index(cncpt)) {
      case 0:
        return Collections.<SubstituteMenu>singletonList(new ComponentCondition_SubstituteMenu());
      case 1:
        return Collections.<SubstituteMenu>singletonList(new VariableBooleanCondition_SubstituteMenu());
      case 2:
        return Collections.<SubstituteMenu>singletonList(new VariableIntegerCondition_SubstituteMenu());
      case 3:
        return Collections.<SubstituteMenu>singletonList(new VariableStringCondition_SubstituteMenu());
      default:
    }
    return Collections.<SubstituteMenu>emptyList();
  }

  private static final ConceptSwitchIndex conceptIndex = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0xf152af7d92d2462fL, 0xacb4a6902db66b9dL, 0x1900d2d6a86e7681L), MetaIdFactory.conceptId(0xf152af7d92d2462fL, 0xacb4a6902db66b9dL, 0x27d147c85ff6c4d2L), MetaIdFactory.conceptId(0xf152af7d92d2462fL, 0xacb4a6902db66b9dL, 0x31e1baf5f2d07866L), MetaIdFactory.conceptId(0xf152af7d92d2462fL, 0xacb4a6902db66b9dL, 0x5afc605aa5c83e8fL), MetaIdFactory.conceptId(0xf152af7d92d2462fL, 0xacb4a6902db66b9dL, 0x31e1baf5f2d09e26L), MetaIdFactory.conceptId(0xf152af7d92d2462fL, 0xacb4a6902db66b9dL, 0x27d147c85ff6ccd9L), MetaIdFactory.conceptId(0xf152af7d92d2462fL, 0xacb4a6902db66b9dL, 0x27d147c85ff679c8L), MetaIdFactory.conceptId(0xf152af7d92d2462fL, 0xacb4a6902db66b9dL, 0x5053c2963cc9b643L), MetaIdFactory.conceptId(0xf152af7d92d2462fL, 0xacb4a6902db66b9dL, 0x5053c2963ccb5644L), MetaIdFactory.conceptId(0xf152af7d92d2462fL, 0xacb4a6902db66b9dL, 0x5053c2963cc9c00fL), MetaIdFactory.conceptId(0xf152af7d92d2462fL, 0xacb4a6902db66b9dL, 0x5053c2963ccb4d96L), MetaIdFactory.conceptId(0xf152af7d92d2462fL, 0xacb4a6902db66b9dL, 0x5053c2963cc9c76bL), MetaIdFactory.conceptId(0xf152af7d92d2462fL, 0xacb4a6902db66b9dL, 0x5053c2963ccb60fbL)).seal();
  private static final ConceptSwitchIndex conceptIndex1 = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0xf152af7d92d2462fL, 0xacb4a6902db66b9dL, 0x31e1baf5f2d07866L), MetaIdFactory.conceptId(0xf152af7d92d2462fL, 0xacb4a6902db66b9dL, 0x5053c2963ccb5644L), MetaIdFactory.conceptId(0xf152af7d92d2462fL, 0xacb4a6902db66b9dL, 0x5053c2963ccb4d96L), MetaIdFactory.conceptId(0xf152af7d92d2462fL, 0xacb4a6902db66b9dL, 0x5053c2963ccb60fbL)).seal();
}
