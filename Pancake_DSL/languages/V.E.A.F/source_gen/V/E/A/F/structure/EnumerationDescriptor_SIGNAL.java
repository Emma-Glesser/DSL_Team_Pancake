package V.E.A.F.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.EnumerationDescriptorBase;
import jetbrains.mps.smodel.runtime.EnumerationDescriptor;
import jetbrains.mps.lang.smodel.EnumerationLiteralsIndex;
import java.util.List;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;

public class EnumerationDescriptor_SIGNAL extends EnumerationDescriptorBase {

  public EnumerationDescriptor_SIGNAL() {
    super(0xf152af7d92d2462fL, 0xacb4a6902db66b9dL, 0x5afc605aa5c83c34L, "SIGNAL", "r:79efd526-4965-4b82-846b-97823ace55e0(V.E.A.F.structure)/6556221099989285940");
  }

  private final EnumerationDescriptor.MemberDescriptor myMember_HIGH_0 = new EnumerationDescriptor.MemberDescriptor("HIGH", "HIGH", 0x5afc605aa5c83c35L, "r:79efd526-4965-4b82-846b-97823ace55e0(V.E.A.F.structure)/6556221099989285941");
  private final EnumerationDescriptor.MemberDescriptor myMember_LOW_0 = new EnumerationDescriptor.MemberDescriptor("LOW", "LOW", 0x5afc605aa5c83c36L, "r:79efd526-4965-4b82-846b-97823ace55e0(V.E.A.F.structure)/6556221099989285942");

  private final EnumerationLiteralsIndex myIndex = EnumerationLiteralsIndex.build(0xf152af7d92d2462fL, 0xacb4a6902db66b9dL, 0x5afc605aa5c83c34L, 0x5afc605aa5c83c35L, 0x5afc605aa5c83c36L);
  private final List<EnumerationDescriptor.MemberDescriptor> myMembers = new EnumerationDescriptorBase.MembersList(myIndex, myMember_HIGH_0, myMember_LOW_0);

  @Nullable
  @Override
  public EnumerationDescriptor.MemberDescriptor getDefault() {
    return null;
  }

  @NotNull
  @Override
  public List<EnumerationDescriptor.MemberDescriptor> getMembers() {
    return myMembers;
  }

  @Nullable
  @Override
  public EnumerationDescriptor.MemberDescriptor getMember(@Nullable String memberName) {
    if (memberName == null) {
      return null;
    }
    switch (memberName) {
      case "HIGH":
        return myMember_HIGH_0;
      case "LOW":
        return myMember_LOW_0;
    }
    return null;
  }

  @Nullable
  @Override
  public EnumerationDescriptor.MemberDescriptor getMember(long idValue) {
    int index = myIndex.index(idValue);
    if (index == -1) {
      return null;
    }
    return myMembers.get(index);
  }
}
